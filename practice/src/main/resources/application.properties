#Logging
logging.level.org.springframework.security = TRACE
#logging.level.org.springframework.data.red.connection = TRACE
#logging.level.org.springframework.cache = TRACE
#logging.level.org.springframework.web.socket = TRACE
logging.level.org.springframework.messaging = TRACE
#logging.level.org.springframework.test.context.transaction = TRACE
#logging.level.org.springframework.transaction = TRACE
#logging.level.org.springframework.orm.jpa = TRACE
#logging.level.org.hibernate = TRACE
#logging.level.org.hibernate.event.internal = TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE
#logging.level.org.hibernate.engine.spi = TRACE
#logging.level.org.springframework.test.context.transaction = TRACE
#logging.level.org.hibernate.event.internal.DefaultMergeEventListener = TRACE
logging.level.org.springframework.web = TRACE
#logging.level.org.springframework.messaging = TRACE


admin.username = admin
admin.password = admin
spring.application.name = practice

#server
app.host.address = http://localhost:8080
frontend.host.address = http://localhost:4200

server.port = 8080
spring.servlet.multipart.max-file-size = 20MB
spring.servlet.multipart.max-request-size = 20MB
server.error.include-message = always


#SSL
#server.ssl.bundle = general


# Datasource
spring.datasource.type = com.zaxxer.hikari.HikariDataSource
spring.datasource.url = jdbc:mysql://localhost:3306/chatapp
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# JPA configurations
spring.jpa.properties.javax.persistence.validation.mode = none
spring.jpa.database = MYSQL
spring.jpa.show-sql = true
# spring.jpa.open-in-view=true

spring.jpa.hibernate.ddl-auto = create
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.highlight_sql = true
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy = jpa

# Second level cache
#spring.jpa.properties.hibernate.cache.use_second_level_cache = true
#spring.jpa.properties.hibernate.cache.use_query_cache = true
#spring.jpa.properties.hibernate.cache.region.factory_class = org.redisson.hibernate.RedissonRegionFactory
#spring.jpa.properties.hibernate.cache.query_cache_layout = SHALLOW_WITH_DISCRIMINATOR
spring.jpa.properties.hibernate.cache.redisson.config = redisson.yaml

#spring.jpa.properties.hibernate.javax.cache.uri = ehcache.xml

# Other configurations
# spring.jpa.properties.hibernate.connection.provider_disables_autocommit = false
spring.jpa.properties.hibernate.allow_update_outside_transaction = true


#Oauth2

#Redis
#spring.data.redis.username = username
#spring.data.redis.password = password
spring.data.redis.timeout = 60000
spring.data.redis.port = 6379
spring.data.redis.host = localhost
spring.data.redis.client-type = lettuce
#spring.data.redis.ssl.enabled = true
#spring.data.redis.ssl.bundle = general


#Sessions
spring.session.redis.repository-type = indexed

#Cache

spring.cache.type = redis
spring.cache.redis.time-to-live = 120


jwt.secret = vcl-vcl-vcl-vcl-vcl-vcl-vcl-vcl-vcl-vcl

server.servlet.session.cookie.same-site = Lax

# Thymeleaf
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html


# Resource
# The following properties are commented out because we will configure
# resource versioning programmatically for more granular control.
# spring.web.resources.chain.enabled = true
# spring.web.resources.chain.strategy.content.enabled = true
spring.mvc.format.date-time = iso



# Management
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = ALWAYS
management.endpoints.web.base-path = /actuator
management.server.port = 8081

spring.security.user.name = admin
spring.security.user.password = admin
spring.security.user.roles = ACTUATOR


# Spring Boot Admin (Client)
spring.boot.admin.client.url = http://localhost:9090
spring.boot.admin.client.username = ${spring.security.user.name}
spring.boot.admin.client.password = ${spring.security.user.password}
spring.boot.admin.client.instance.management-base-url = http://localhost:8081
spring.boot.admin.client.instance.metadata.user.name = ${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password = ${spring.security.user.password}
