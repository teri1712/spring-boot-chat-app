name: Spring Boot Chat Application CI with Maven

on:
    push:
        branches: [ "**" ]
    pull_request:
        branches: [ "**" ]

jobs:
    clean-and-test:
        runs-on: ubuntu-latest

        services:
            mysql:
                # Docker Hub image for MySQL
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: chatapp
                ports:
                    - 3306:3306
            redis:
                image: redis/redis-stack:latest
                ports:
                    - 6379:6379

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            # Set up JDK 17 and cache Maven dependencies
            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'
                    cache: 'maven'
            -   name: Build and test with Maven
                working-directory: ./practice
                run: mvn -B clean test
    containerize-and-push:
        needs: clean-and-test
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
            -   name: Login to DockerHub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}
            -   name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                    context: ./practice
                    push: true
                    tags: ${{ secrets.DOCKERHUB_USERNAME }}/decade-chat-app:latest

    deploy-azure:
        needs: containerize-and-push
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
            -   name: Copy docker-compose file to Azure VM
                uses: appleboy/scp-action@master
                with:
                    host: ${{ secrets.AZURE_HOST }}
                    username: ${{ secrets.AZURE_USER }}
                    key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
                    source: "practice/docker-compose.yml"
                    target: "~/app/practice"

            -   name: Deploy to VM
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.AZURE_HOST }}
                    username: ${{ secrets.AZURE_USER }}
                    key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
                    script: |
                        cd ~/app/practice
                        
                        # Pull the latest images from Docker Hub
                        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/decade-chat-app:latest
                        
                        # Start the new containers
                        docker-compose down
                        docker-compose up -d
